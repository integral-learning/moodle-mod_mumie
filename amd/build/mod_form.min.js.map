{"version":3,"sources":["../src/mod_form.js"],"names":["define","addServerButton","document","getElementById","missingConfig","getElementsByName","lmsSelectorUrl","serverController","serverStructure","serverDropDown","init","structure","onchange","courseController","updateOptions","langController","taskController","getSelectedServer","selectedServerName","options","selectedIndex","text","i","server","name","disable","disabled","removeChildElems","getAllServers","problemSelectorController","problemSelectorButton","problemSelectorWindow","systemLanguage","value","sendResponse","response","postMessage","JSON","stringify","sendSuccess","message","success","sendFailure","onclick","window","open","encodeURIComponent","urlprefix","getSelectedTask","link","location","origin","onclose","addEventListener","event","console","log","data","importObj","parse","setLanguage","language","require","str","notification","get_strings","component","done","s","addNotification","type","fail","exception","error","enable","courseDropDown","coursefileElem","addOptionForCourse","course","optionCourse","createElement","selectedLanguage","getSelectedLanguage","languages","includes","setAttribute","append","updateCoursefilePath","getSelectedCourse","coursefile","isEdit","selectedCourseName","courses","j","selectedCourseFile","childElementCount","languageDropDown","addLanguageOption","lang","optionLang","option","Error","currentLang","taskDropDown","nameElem","useCompleteCourseElem","updateName","isCustomName","getHeadline","length","getAllHeadlines","task","headline","localHeadline","getAllTasks","tasks","m","push","headlines","getPseudoTaskFromCourse","n","getLocalizedLink","addTaskOption","optionTask","addPseudoTaskOption","useCompleteCourse","checked","getAttribute","selectedLink","slice","selectTaskByLink","contextid","serverConfigExists","MumieServer","elem","firstChild","removeChild"],"mappings":"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","sourcesContent":["define(['jquery', 'core/templates', 'core/modal_factory', 'auth_mumie/mumie_server_config', 'core/ajax'],\n    function() {\n        var addServerButton = document.getElementById(\"id_add_server_button\");\n        var missingConfig = document.getElementsByName(\"mumie_missing_config\")[0];\n        var lmsSelectorUrl = 'http://localhost:7070';\n        var serverController = (function() {\n            var serverStructure;\n            var serverDropDown = document.getElementById(\"id_server\");\n\n            return {\n                init: function(structure) {\n                    serverStructure = structure;\n                    serverDropDown.onchange = function() {\n                        courseController.updateOptions();\n                        langController.updateOptions();\n                        taskController.updateOptions();\n                    };\n                },\n                getSelectedServer: function() {\n                    var selectedServerName = serverDropDown.options[serverDropDown.selectedIndex].text;\n\n                    for (var i in serverStructure) {\n                        var server = serverStructure[i];\n                        if (server.name == selectedServerName) {\n                            return server;\n                        }\n                    }\n                    return null;\n                },\n                disable: function() {\n                    serverDropDown.disabled = true;\n                    removeChildElems(serverDropDown);\n                },\n                getAllServers: function() {\n                    return serverStructure;\n                }\n            };\n        })();\n\n        var problemSelectorController = (function() {\n            var problemSelectorButton = document.getElementById('id_prb_selector_btn');\n            var problemSelectorWindow;\n            var systemLanguage = document.getElementsByName(\"mumie_system_language\")[0].value;\n\n\n            /**\n             * Send a message to the problem selector window.\n             * @param {Object} response\n             */\n            function sendResponse(response) {\n                problemSelectorWindow.postMessage(JSON.stringify(response), lmsSelectorUrl);\n            }\n\n            /**\n             * Send a success message to problem selector window\n             * @param {string} message\n             */\n            function sendSuccess(message = '') {\n                sendResponse({\n                    success: true,\n                    message: message\n                });\n            }\n\n            /**\n             * Send a failure message to problem selector window\n             * @param {string} message\n             */\n            function sendFailure(message = '') {\n                sendResponse({\n                    success: false,\n                    message: message\n                });\n            }\n            return {\n                init: function() {\n                    problemSelectorButton.onclick = function() {\n                        problemSelectorWindow = window.open(lmsSelectorUrl + '/lms-browser?org=mi2&serverUrl='\n                                + encodeURIComponent(serverController.getSelectedServer().urlprefix)\n                                + \"&lang=\"\n                                + systemLanguage\n                                + \"&problem=\" + taskController.getSelectedTask().link\n                                + \"&origin=\" + encodeURIComponent(window.location.origin)\n                            , '_blank');\n                    };\n\n                    window.onclose = function() {\n                        sendSuccess();\n                    };\n\n                    window.addEventListener(\"beforeunload\", function() {\n                        sendSuccess();\n                     }, false);\n\n                    window.addEventListener(\"message\", (event) => {\n                        console.log(event.data);\n                        console.log(\"origin: \" + event.origin);\n                        console.log(\"lmsSelectorUrl: \" + lmsSelectorUrl);\n                        if (event.origin != lmsSelectorUrl) {\n                            return;\n                        }\n                        var importObj = JSON.parse(event.data);\n                        try {\n                            langController.setLanguage(importObj.language);\n                            taskController.updateOptions(importObj.link + '?lang=' + importObj.language);\n                            sendSuccess();\n                            require(['core/str', \"core/notification\"], function(str, notification) {\n                                str.get_strings([{\n                                    'key': 'mumie_form_updated_selection',\n                                    component: 'mod_mumie'\n                                }]).done(function(s) {\n                                    notification.addNotification({\n                                        message: s[0],\n                                        type: \"info\"\n                                    });\n                                }).fail(notification.exception);\n                            });\n                        } catch (error) {\n                            sendFailure(error.message);\n                        }\n                      }, false);\n                },\n                disable: function() {\n                    problemSelectorButton.disabled = true;\n                },\n                enable: function() {\n                    problemSelectorButton.disabled = false;\n                }\n            };\n        })();\n\n        var courseController = (function() {\n            var courseDropDown = document.getElementById(\"id_mumie_course\");\n            var coursefileElem = document.getElementsByName(\"mumie_coursefile\")[0];\n\n            /**\n             * Add a new option the the 'MUMIE Course' drop down menu\n             * @param {Object} course\n             */\n            function addOptionForCourse(course) {\n                var optionCourse = document.createElement(\"option\");\n                var selectedLanguage = langController.getSelectedLanguage();\n                var name;\n                // If the currently selected server is not available on the server, we need to select another one.\n                if (!course.languages.includes(selectedLanguage)) {\n                    name = course.name[0];\n                } else {\n                    for (var i in course.name) {\n                        if (course.name[i].language == selectedLanguage) {\n                            name = course.name[i];\n                        }\n                    }\n                }\n                optionCourse.setAttribute(\"value\", name.value);\n                optionCourse.text = name.value;\n                courseDropDown.append(optionCourse);\n            }\n\n            /**\n             * Update the hidden input field with the selected course's course file path\n             */\n            function updateCoursefilePath() {\n                coursefileElem.value = courseController.getSelectedCourse().coursefile;\n            }\n\n            return {\n                init: function(isEdit) {\n                    courseDropDown.onchange = function() {\n                        updateCoursefilePath();\n                        langController.updateOptions();\n                        taskController.updateOptions();\n                    };\n                    courseController.updateOptions(isEdit ? coursefileElem.value : false);\n                },\n                getSelectedCourse: function() {\n                    var selectedCourseName = courseDropDown.options[courseDropDown.selectedIndex].text;\n                    var courses = serverController.getSelectedServer().courses;\n                    for (var i in courses) {\n                        var course = courses[i];\n                        for (var j in course.name) {\n                            if (course.name[j].value == selectedCourseName) {\n                                return course;\n                            }\n                        }\n                    }\n                    return null;\n                },\n                disable: function() {\n                    courseDropDown.disabled = true;\n                    removeChildElems(courseDropDown);\n                },\n                updateOptions: function() {\n                    var selectedCourseFile = coursefileElem.value;\n                    removeChildElems(courseDropDown);\n                    courseDropDown.selectedIndex = 0;\n                    var courses = serverController.getSelectedServer().courses;\n                    for (var i in courses) {\n                        var course = courses[i];\n                        addOptionForCourse(course);\n                        if (course.coursefile == selectedCourseFile) {\n                            courseDropDown.selectedIndex = courseDropDown.childElementCount - 1;\n                        }\n                    }\n                    updateCoursefilePath();\n                }\n            };\n        })();\n\n        var langController = (function() {\n            var languageDropDown = document.getElementById(\"id_language\");\n\n            /**\n             * Add a new option to the language drop down menu\n             * @param {string} lang the language to add\n             */\n            function addLanguageOption(lang) {\n                var optionLang = document.createElement(\"option\");\n                optionLang.setAttribute(\"value\", lang);\n                optionLang.text = lang;\n                languageDropDown.append(optionLang);\n            }\n            return {\n                init: function() {\n\n                    languageDropDown.onchange = function() {\n                        taskController.updateOptions();\n                        courseController.updateOptions();\n                    };\n                    langController.updateOptions();\n                },\n                getSelectedLanguage: function() {\n                    return languageDropDown.options[languageDropDown.selectedIndex].text;\n                },\n                setLanguage: function(lang) {\n                    for (var i in languageDropDown.options) {\n                        var option = languageDropDown.options[i];\n                        if (option.value == lang) {\n                            languageDropDown.selectedIndex = i;\n                            return;\n                        }\n                    }\n                    throw new Error(\"Selected language not available\");\n                },\n                disable: function() {\n                    languageDropDown.disabled = true;\n                    removeChildElems(languageDropDown);\n                },\n                updateOptions: function() {\n                    var currentLang = langController.getSelectedLanguage();\n                    removeChildElems(languageDropDown);\n                    languageDropDown.selectedIndex = 0;\n                    var languages = courseController.getSelectedCourse().languages;\n                    for (var i in languages) {\n                        var lang = languages[i];\n                        addLanguageOption(lang);\n                        if (lang == currentLang) {\n                            languageDropDown.selectedIndex = languageDropDown.childElementCount - 1;\n                        }\n                    }\n                }\n            };\n        })();\n\n        var taskController = (function() {\n            var taskDropDown = document.getElementById(\"id_taskurl\");\n            var nameElem = document.getElementById(\"id_name\");\n            var useCompleteCourseElem = document.getElementById(\"id_mumie_complete_course\");\n\n            /**\n             * Update the activity's name in the input field\n             */\n            function updateName() {\n                if (!isCustomName()) {\n                    nameElem.value = getHeadline(taskController.getSelectedTask());\n                }\n            }\n\n            /**\n             * Check whether the activity has a custom name\n             *\n             * @return {boolean} True, if there is no headline with that name in all tasks\n             */\n            function isCustomName() {\n                if (nameElem.value.length == 0) {\n                    return false;\n                }\n                return !getAllHeadlines().includes(nameElem.value);\n            }\n\n            /**\n             * Get the task's headline for the currently selected language\n             * @param {Object} task\n             * @returns  {string} the headline\n             */\n            function getHeadline(task) {\n                if (!task) {\n                    return null;\n                }\n                for (var i in task.headline) {\n                    var localHeadline = task.headline[i];\n                    if (localHeadline.language == langController.getSelectedLanguage()) {\n                        return localHeadline.name;\n                    }\n                }\n                return null;\n            }\n\n            /**\n             * Get all tasks that are available on all servers\n             *\n             * @return {Object} Array containing all available tasks\n             */\n            function getAllTasks() {\n                var tasks = [];\n                for (var i in serverController.getAllServers()) {\n                    var server = serverController.getAllServers()[i];\n                    for (var j in server.courses) {\n                        var course = server.courses[j];\n                        for (var m in course.tasks) {\n                            var task = course.tasks[m];\n                            tasks.push(task);\n                        }\n                    }\n                }\n                return tasks;\n            }\n\n            /**\n             * Get all possible headlines in all languages\n             * @returns {Object} Array containing all headlines\n             */\n            function getAllHeadlines() {\n                var headlines = [];\n                var tasks = getAllTasks();\n                tasks.push(getPseudoTaskFromCourse(courseController.getSelectedCourse()));\n                for (var i in tasks) {\n                    var task = tasks[i];\n                    for (var n in task.headline) {\n                        headlines.push(task.headline[n].name);\n                    }\n                }\n                var course = courseController.getSelectedCourse();\n                for (var j in course.name) {\n                    var name = course.name[j];\n                    headlines.push(name.value);\n                }\n                return headlines;\n            }\n\n            /**\n             * Add lanugage parameter to the task's link to display content in the selected language\n             * @param {Object} task\n             * @returns {string}\n             */\n            function getLocalizedLink(task) {\n                return task.link + \"?lang=\" + langController.getSelectedLanguage();\n            }\n\n            /**\n             * Add a new option to the 'Problem' drop down menu\n             * @param {Object} task\n             */\n            function addTaskOption(task) {\n                if (getHeadline(task) !== null) {\n                    var optionTask = document.createElement(\"option\");\n                    optionTask.setAttribute(\"value\", getLocalizedLink(task));\n                    optionTask.text = getHeadline(task);\n                    taskDropDown.append(optionTask);\n                }\n            }\n\n            /**\n             * User can chose to select an entire course instead of a single problem.\n             * If they do so, we simply add a pseudo problem linking to the courses overview page\n             * @param {Object} course\n             */\n            function addPseudoTaskOption(course) {\n                var task = getPseudoTaskFromCourse(course);\n                var optionTask = document.createElement(\"option\");\n                optionTask.setAttribute(\"value\", getLocalizedLink(task));\n                optionTask.text = getHeadline(task);\n                taskDropDown.append(optionTask);\n            }\n\n            /**\n             * Get a task that links to a course's overview page\n             * @param {Object} course\n             * @returns {Object} task\n             */\n            function getPseudoTaskFromCourse(course) {\n                var headline = [];\n                for (var i in course.name) {\n                    var name = course.name[i];\n                    headline.push({\n                        \"name\": name.value,\n                        \"language\": name.language\n                    });\n                }\n                return {\n                    \"link\": course.link,\n                    \"headline\": headline\n                };\n            }\n\n            /**\n             * Returns true, if the user has chosen to select the entire course instead of a single problem\n             * @returns {boolean}\n             */\n            function useCompleteCourse() {\n                return useCompleteCourseElem.checked;\n            }\n\n            return {\n                init: function(isEdit) {\n                    updateName();\n                    taskDropDown.onchange = function() {\n                        updateName();\n                    };\n                    useCompleteCourseElem.onchange = function() {\n                        taskController.updateOptions();\n                    };\n                    taskController.updateOptions(isEdit ?\n                        taskDropDown.options[taskDropDown.selectedIndex].getAttribute('value') : undefined\n                    );\n                },\n                getSelectedTask: function() {\n                    var selectedLink = taskDropDown.options[taskDropDown.selectedIndex] ==\n                        undefined ? undefined : taskDropDown.options[taskDropDown.selectedIndex].getAttribute('value');\n                    var course = courseController.getSelectedCourse();\n                    var tasks = course.tasks.slice();\n                    tasks.push(getPseudoTaskFromCourse(course));\n                    for (var i in tasks) {\n                        var task = tasks[i];\n                        if (selectedLink == getLocalizedLink(task)) {\n                            return task;\n                        }\n                    }\n                    return null;\n                },\n                disable: function() {\n                    taskDropDown.disabled = true;\n                    removeChildElems(taskDropDown);\n                },\n                updateOptions: function(selectTaskByLink) {\n                    removeChildElems(taskDropDown);\n                    taskDropDown.selectedIndex = 0;\n                    if (useCompleteCourse()) {\n                        addPseudoTaskOption(courseController.getSelectedCourse());\n                    } else {\n                        var tasks = courseController.getSelectedCourse().tasks;\n                        for (var i in tasks) {\n                            var task = tasks[i];\n                            addTaskOption(task);\n                            if (selectTaskByLink === getLocalizedLink(task)) {\n                                taskDropDown.selectedIndex = taskDropDown.childElementCount - 1;\n                            }\n                        }\n                    }\n                    updateName();\n                },\n                useCompleteCourse: function() {\n                    return useCompleteCourse();\n                }\n            };\n        })();\n\n\n        return {\n            init: function(contextid) {\n                var isEdit = document.getElementById(\"id_name\").getAttribute('value');\n\n                if (isEdit && !serverConfigExists()) {\n                    require(['core/str', \"core/notification\"], function(str, notification) {\n                        str.get_strings([{\n                            'key': 'mumie_form_missing_server',\n                            component: 'mod_mumie'\n                        }]).done(function(s) {\n                            notification.addNotification({\n                                message: s[0] + \"<b>\" + missingConfig.getAttribute(\"value\") + \"</b>\",\n                                type: \"problem\"\n                            });\n                        }).fail(notification.exception);\n                    });\n                    serverController.disable();\n                    courseController.disable();\n                    langController.disable();\n                    taskController.disable();\n                    problemSelectorController.disable();\n                } else {\n                    serverController.init(JSON.parse(document.getElementsByName('mumie_server_structure')[0].value));\n                    courseController.init(isEdit);\n                    taskController.init(isEdit);\n                    langController.init();\n                    problemSelectorController.init();\n                }\n                if (addServerButton) {\n                    require(['auth_mumie/mumie_server_config'], function(MumieServer) {\n                        MumieServer.init(addServerButton, contextid);\n                    });\n                }\n            }\n        };\n\n        /**\n         * Remove all child elements of a given html element\n         * @param {Object} elem\n         */\n        function removeChildElems(elem) {\n            while (elem.firstChild) {\n                elem.removeChild(elem.firstChild);\n            }\n        }\n\n        /**\n         * Check, if the flag for an existing config is set\n         * @returns {boolean}\n         */\n        function serverConfigExists() {\n            return document.getElementsByName(\"mumie_missing_config\")[0].getAttribute(\"value\") === \"\";\n        }\n    });"],"file":"mod_form.min.js"}