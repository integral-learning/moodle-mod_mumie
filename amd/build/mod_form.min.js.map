{"version":3,"sources":["../src/mod_form.js"],"names":["define","addServerButton","document","getElementById","missingConfig","getElementsByName","lmsSelectorUrl","value","serverController","serverStructure","serverDropDown","init","structure","onchange","courseController","updateOptions","langController","taskController","getSelectedServer","selectedServerName","options","selectedIndex","text","i","server","name","disable","disabled","removeChildElems","getAllServers","problemSelectorController","problemSelectorButton","problemSelectorWindow","mumieOrg","sendResponse","response","postMessage","JSON","stringify","sendSuccess","message","success","sendFailure","addMessageListener","window","addEventListener","event","origin","importObj","parse","data","setLanguage","language","link","focus","displayProblemSelectedMessage","error","require","str","notification","get_strings","component","done","s","addNotification","type","fail","exception","onclick","open","encodeURIComponent","urlprefix","getSelectedLanguage","getSelectedTask","location","onclose","courseDropDown","coursefileElem","addOptionForCourse","course","optionCourse","createElement","selectedLanguage","languages","includes","setAttribute","append","updateCoursefilePath","getSelectedCourse","coursefile","isEdit","selectedCourseName","courses","j","selectedCourseFile","childElementCount","languageDropDown","addLanguageOption","lang","optionLang","option","Error","currentLang","taskDropDown","nameElem","useCompleteCourseElem","updateName","isCustomName","getHeadline","length","getAllHeadlines","task","headline","localHeadline","getAllTasks","tasks","m","push","headlines","getPseudoTaskFromCourse","n","getLocalizedLink","addTaskOption","optionTask","addPseudoTaskOption","useCompleteCourse","checked","getAttribute","selectedLink","slice","selectTaskByLink","disableDropDownMenus","errorKey","contextid","serverConfigExists","MumieServer","elem","firstChild","removeChild"],"mappings":"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","sourcesContent":["define(['jquery', 'core/templates', 'core/modal_factory', 'auth_mumie/mumie_server_config', 'core/ajax'],\n    function() {\n        var addServerButton = document.getElementById(\"id_add_server_button\");\n        var missingConfig = document.getElementsByName(\"mumie_missing_config\")[0];\n        var lmsSelectorUrl = document.getElementsByName('problem_selector_url')[0].value;\n        var serverController = (function() {\n            var serverStructure;\n            var serverDropDown = document.getElementById(\"id_server\");\n\n            return {\n                init: function(structure) {\n                    serverStructure = structure;\n                    serverDropDown.onchange = function() {\n                        courseController.updateOptions();\n                        langController.updateOptions();\n                        taskController.updateOptions();\n                    };\n                },\n                getSelectedServer: function() {\n                    var selectedServerName = serverDropDown.options[serverDropDown.selectedIndex].text;\n\n                    for (var i in serverStructure) {\n                        var server = serverStructure[i];\n                        if (server.name == selectedServerName) {\n                            return server;\n                        }\n                    }\n                    return null;\n                },\n                disable: function() {\n                    serverDropDown.disabled = true;\n                    removeChildElems(serverDropDown);\n                },\n                getAllServers: function() {\n                    return serverStructure;\n                }\n            };\n        })();\n\n        var problemSelectorController = (function() {\n            var problemSelectorButton = document.getElementById('id_prb_selector_btn');\n            var problemSelectorWindow;\n            var mumieOrg = document.getElementsByName('mumie_org')[0].value;\n\n            /**\n             * Send a message to the problem selector window.\n             *\n             * Don't do anything, if there is no problem selector window.\n             * @param {Object} response\n             */\n            function sendResponse(response) {\n                if (!problemSelectorWindow) {\n                    return;\n                }\n                problemSelectorWindow.postMessage(JSON.stringify(response), lmsSelectorUrl);\n            }\n\n            /**\n             * Send a success message to problem selector window\n             * @param {string} message\n             */\n            function sendSuccess(message = '') {\n                sendResponse({\n                    success: true,\n                    message: message\n                });\n            }\n\n            /**\n             * Send a failure message to problem selector window\n             * @param {string} message\n             */\n            function sendFailure(message = '') {\n                sendResponse({\n                    success: false,\n                    message: message\n                });\n            }\n\n            /**\n             * Add an event listener that accepts messages from LMS-Browser and updates the selected problem.\n             */\n            function addMessageListener() {\n                window.addEventListener('message', (event) => {\n                    if (event.origin != lmsSelectorUrl) {\n                        return;\n                    }\n                    var importObj = JSON.parse(event.data);\n                    try {\n                        langController.setLanguage(importObj.language);\n                        taskController.updateOptions(importObj.link + '?lang=' + importObj.language);\n                        sendSuccess();\n                        window.focus();\n                        displayProblemSelectedMessage();\n                    } catch (error) {\n                        sendFailure(error.message);\n                    }\n                  }, false);\n            }\n\n            /**\n             * Display a success message in Moodle that a problem was successfully selected.\n             */\n            function displayProblemSelectedMessage() {\n                require(['core/str', \"core/notification\"], function(str, notification) {\n                    str.get_strings([{\n                        'key': 'mumie_form_updated_selection',\n                        component: 'mod_mumie'\n                    }]).done(function(s) {\n                        notification.addNotification({\n                            message: s[0],\n                            type: \"info\"\n                        });\n                    }).fail(notification.exception);\n                });\n            }\n\n            return {\n                init: function() {\n                    problemSelectorButton.onclick = function() {\n                        problemSelectorWindow = window.open(\n                            lmsSelectorUrl\n                                + '/lms-problem-selector?'\n                                + 'org='\n                                + mumieOrg\n                                + '&serverUrl='\n                                + encodeURIComponent(serverController.getSelectedServer().urlprefix)\n                                + \"&lang=\"\n                                + langController.getSelectedLanguage()\n                                + \"&problem=\" + taskController.getSelectedTask().link\n                                + \"&origin=\" + encodeURIComponent(window.location.origin)\n                            , '_blank'\n                        );\n                    };\n\n                    window.onclose = function() {\n                        sendSuccess();\n                    };\n\n                    window.addEventListener(\"beforeunload\", function() {\n                        sendSuccess();\n                     }, false);\n\n                    addMessageListener();\n                },\n                disable: function() {\n                    problemSelectorButton.disabled = true;\n                }\n            };\n        })();\n\n        var courseController = (function() {\n            var courseDropDown = document.getElementById(\"id_mumie_course\");\n            var coursefileElem = document.getElementsByName(\"mumie_coursefile\")[0];\n\n            /**\n             * Add a new option the the 'MUMIE Course' drop down menu\n             * @param {Object} course\n             */\n            function addOptionForCourse(course) {\n                var optionCourse = document.createElement(\"option\");\n                var selectedLanguage = langController.getSelectedLanguage();\n                var name;\n                // If the currently selected server is not available on the server, we need to select another one.\n                if (!course.languages.includes(selectedLanguage)) {\n                    name = course.name[0];\n                } else {\n                    for (var i in course.name) {\n                        if (course.name[i].language == selectedLanguage) {\n                            name = course.name[i];\n                        }\n                    }\n                }\n                optionCourse.setAttribute(\"value\", name.value);\n                optionCourse.text = name.value;\n                courseDropDown.append(optionCourse);\n            }\n\n            /**\n             * Update the hidden input field with the selected course's course file path\n             */\n            function updateCoursefilePath() {\n                coursefileElem.value = courseController.getSelectedCourse().coursefile;\n            }\n\n            return {\n                init: function(isEdit) {\n                    courseDropDown.onchange = function() {\n                        updateCoursefilePath();\n                        langController.updateOptions();\n                        taskController.updateOptions();\n                    };\n                    courseController.updateOptions(isEdit ? coursefileElem.value : false);\n                },\n                getSelectedCourse: function() {\n                    var selectedCourseName = courseDropDown.options[courseDropDown.selectedIndex].text;\n                    var courses = serverController.getSelectedServer().courses;\n                    for (var i in courses) {\n                        var course = courses[i];\n                        for (var j in course.name) {\n                            if (course.name[j].value == selectedCourseName) {\n                                return course;\n                            }\n                        }\n                    }\n                    return null;\n                },\n                disable: function() {\n                    courseDropDown.disabled = true;\n                    removeChildElems(courseDropDown);\n                },\n                updateOptions: function() {\n                    var selectedCourseFile = coursefileElem.value;\n                    removeChildElems(courseDropDown);\n                    courseDropDown.selectedIndex = 0;\n                    var courses = serverController.getSelectedServer().courses;\n                    for (var i in courses) {\n                        var course = courses[i];\n                        addOptionForCourse(course);\n                        if (course.coursefile == selectedCourseFile) {\n                            courseDropDown.selectedIndex = courseDropDown.childElementCount - 1;\n                        }\n                    }\n                    updateCoursefilePath();\n                }\n            };\n        })();\n\n        var langController = (function() {\n            var languageDropDown = document.getElementById(\"id_language\");\n\n            /**\n             * Add a new option to the language drop down menu\n             * @param {string} lang the language to add\n             */\n            function addLanguageOption(lang) {\n                var optionLang = document.createElement(\"option\");\n                optionLang.setAttribute(\"value\", lang);\n                optionLang.text = lang;\n                languageDropDown.append(optionLang);\n            }\n            return {\n                init: function() {\n\n                    languageDropDown.onchange = function() {\n                        taskController.updateOptions();\n                        courseController.updateOptions();\n                    };\n                    langController.updateOptions();\n                },\n                getSelectedLanguage: function() {\n                    return languageDropDown.options[languageDropDown.selectedIndex].text;\n                },\n                setLanguage: function(lang) {\n                    for (var i in languageDropDown.options) {\n                        var option = languageDropDown.options[i];\n                        if (option.value == lang) {\n                            languageDropDown.selectedIndex = i;\n                            courseController.updateOptions();\n                            return;\n                        }\n                    }\n                    throw new Error(\"Selected language not available\");\n                },\n                disable: function() {\n                    languageDropDown.disabled = true;\n                    removeChildElems(languageDropDown);\n                },\n                updateOptions: function() {\n                    var currentLang = langController.getSelectedLanguage();\n                    removeChildElems(languageDropDown);\n                    languageDropDown.selectedIndex = 0;\n                    var languages = courseController.getSelectedCourse().languages;\n                    for (var i in languages) {\n                        var lang = languages[i];\n                        addLanguageOption(lang);\n                        if (lang == currentLang) {\n                            languageDropDown.selectedIndex = languageDropDown.childElementCount - 1;\n                        }\n                    }\n                }\n            };\n        })();\n\n        var taskController = (function() {\n            var taskDropDown = document.getElementById(\"id_taskurl\");\n            var nameElem = document.getElementById(\"id_name\");\n            var useCompleteCourseElem = document.getElementById(\"id_mumie_complete_course\");\n\n            /**\n             * Update the activity's name in the input field\n             */\n            function updateName() {\n                if (!isCustomName()) {\n                    nameElem.value = getHeadline(taskController.getSelectedTask());\n                }\n            }\n\n            /**\n             * Check whether the activity has a custom name\n             *\n             * @return {boolean} True, if there is no headline with that name in all tasks\n             */\n            function isCustomName() {\n                if (nameElem.value.length == 0) {\n                    return false;\n                }\n                return !getAllHeadlines().includes(nameElem.value);\n            }\n\n            /**\n             * Get the task's headline for the currently selected language\n             * @param {Object} task\n             * @returns  {string} the headline\n             */\n            function getHeadline(task) {\n                if (!task) {\n                    return null;\n                }\n                for (var i in task.headline) {\n                    var localHeadline = task.headline[i];\n                    if (localHeadline.language == langController.getSelectedLanguage()) {\n                        return localHeadline.name;\n                    }\n                }\n                return null;\n            }\n\n            /**\n             * Get all tasks that are available on all servers\n             *\n             * @return {Object} Array containing all available tasks\n             */\n            function getAllTasks() {\n                var tasks = [];\n                for (var i in serverController.getAllServers()) {\n                    var server = serverController.getAllServers()[i];\n                    for (var j in server.courses) {\n                        var course = server.courses[j];\n                        for (var m in course.tasks) {\n                            var task = course.tasks[m];\n                            tasks.push(task);\n                        }\n                    }\n                }\n                return tasks;\n            }\n\n            /**\n             * Get all possible headlines in all languages\n             * @returns {Object} Array containing all headlines\n             */\n            function getAllHeadlines() {\n                var headlines = [];\n                var tasks = getAllTasks();\n                tasks.push(getPseudoTaskFromCourse(courseController.getSelectedCourse()));\n                for (var i in tasks) {\n                    var task = tasks[i];\n                    for (var n in task.headline) {\n                        headlines.push(task.headline[n].name);\n                    }\n                }\n                var course = courseController.getSelectedCourse();\n                for (var j in course.name) {\n                    var name = course.name[j];\n                    headlines.push(name.value);\n                }\n                return headlines;\n            }\n\n            /**\n             * Add lanugage parameter to the task's link to display content in the selected language\n             * @param {Object} task\n             * @returns {string}\n             */\n            function getLocalizedLink(task) {\n                return task.link + \"?lang=\" + langController.getSelectedLanguage();\n            }\n\n            /**\n             * Add a new option to the 'Problem' drop down menu\n             * @param {Object} task\n             */\n            function addTaskOption(task) {\n                if (getHeadline(task) !== null) {\n                    var optionTask = document.createElement(\"option\");\n                    optionTask.setAttribute(\"value\", getLocalizedLink(task));\n                    optionTask.text = getHeadline(task);\n                    taskDropDown.append(optionTask);\n                }\n            }\n\n            /**\n             * User can chose to select an entire course instead of a single problem.\n             * If they do so, we simply add a pseudo problem linking to the courses overview page\n             * @param {Object} course\n             */\n            function addPseudoTaskOption(course) {\n                var task = getPseudoTaskFromCourse(course);\n                var optionTask = document.createElement(\"option\");\n                optionTask.setAttribute(\"value\", getLocalizedLink(task));\n                optionTask.text = getHeadline(task);\n                taskDropDown.append(optionTask);\n            }\n\n            /**\n             * Get a task that links to a course's overview page\n             * @param {Object} course\n             * @returns {Object} task\n             */\n            function getPseudoTaskFromCourse(course) {\n                var headline = [];\n                for (var i in course.name) {\n                    var name = course.name[i];\n                    headline.push({\n                        \"name\": name.value,\n                        \"language\": name.language\n                    });\n                }\n                return {\n                    \"link\": course.link,\n                    \"headline\": headline\n                };\n            }\n\n            /**\n             * Returns true, if the user has chosen to select the entire course instead of a single problem\n             * @returns {boolean}\n             */\n            function useCompleteCourse() {\n                return useCompleteCourseElem.checked;\n            }\n\n            return {\n                init: function(isEdit) {\n                    updateName();\n                    taskDropDown.onchange = function() {\n                        updateName();\n                    };\n                    useCompleteCourseElem.onchange = function() {\n                        taskController.updateOptions();\n                    };\n                    taskController.updateOptions(isEdit ?\n                        taskDropDown.options[taskDropDown.selectedIndex].getAttribute('value') : undefined\n                    );\n                },\n                getSelectedTask: function() {\n                    var selectedLink = taskDropDown.options[taskDropDown.selectedIndex] ==\n                        undefined ? undefined : taskDropDown.options[taskDropDown.selectedIndex].getAttribute('value');\n                    var course = courseController.getSelectedCourse();\n                    var tasks = course.tasks.slice();\n                    tasks.push(getPseudoTaskFromCourse(course));\n                    for (var i in tasks) {\n                        var task = tasks[i];\n                        if (selectedLink == getLocalizedLink(task)) {\n                            return task;\n                        }\n                    }\n                    return null;\n                },\n                disable: function() {\n                    taskDropDown.disabled = true;\n                    removeChildElems(taskDropDown);\n                },\n                updateOptions: function(selectTaskByLink) {\n                    removeChildElems(taskDropDown);\n                    taskDropDown.selectedIndex = 0;\n                    if (useCompleteCourse()) {\n                        addPseudoTaskOption(courseController.getSelectedCourse());\n                    } else {\n                        var tasks = courseController.getSelectedCourse().tasks;\n                        for (var i in tasks) {\n                            var task = tasks[i];\n                            addTaskOption(task);\n                            if (selectTaskByLink === getLocalizedLink(task)) {\n                                taskDropDown.selectedIndex = taskDropDown.childElementCount - 1;\n                            }\n                        }\n                    }\n                    updateName();\n                },\n                useCompleteCourse: function() {\n                    return useCompleteCourse();\n                }\n            };\n        })();\n\n\n        /**\n         *  Disable all dropdown menus and show notification\n         * @param {string} errorKey\n         */\n        function disableDropDownMenus(errorKey) {\n            require(['core/str', \"core/notification\"], function(str, notification) {\n                str.get_strings([{\n                    'key':  errorKey,\n                    component: 'mod_mumie'\n                }]).done(function(s) {\n                    notification.addNotification({\n                        message: s[0] + \"<b>\" + missingConfig.getAttribute(\"value\") + \"</b>\",\n                        type: \"problem\"\n                    });\n                }).fail(notification.exception);\n            });\n            serverController.disable();\n            courseController.disable();\n            langController.disable();\n            taskController.disable();\n            problemSelectorController.disable();\n        }\n\n        return {\n            init: function(contextid) {\n                var isEdit = document.getElementById(\"id_name\").getAttribute('value');\n                var serverStructure = JSON.parse(document.getElementsByName('mumie_server_structure')[0].value);\n                if (isEdit && !serverConfigExists()) {\n                    disableDropDownMenus('mumie_form_missing_server');\n                } else if (!serverStructure.length) {\n                    disableDropDownMenus('mumie_form_no_server_conf');\n                } else {\n                    serverController.init(serverStructure);\n                    courseController.init(isEdit);\n                    taskController.init(isEdit);\n                    langController.init();\n                    problemSelectorController.init();\n                }\n                if (addServerButton) {\n                    require(['auth_mumie/mumie_server_config'], function(MumieServer) {\n                        MumieServer.init(addServerButton, contextid);\n                    });\n                }\n            }\n        };\n\n        /**\n         * Remove all child elements of a given html element\n         * @param {Object} elem\n         */\n        function removeChildElems(elem) {\n            while (elem.firstChild) {\n                elem.removeChild(elem.firstChild);\n            }\n        }\n\n        /**\n         * Check, if the flag for an existing config is set\n         * @returns {boolean}\n         */\n        function serverConfigExists() {\n            return document.getElementsByName(\"mumie_missing_config\")[0].getAttribute(\"value\") === \"\";\n        }\n    });"],"file":"mod_form.min.js"}