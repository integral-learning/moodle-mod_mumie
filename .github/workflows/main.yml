name: Moodle plugin CI
on: 
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - dev
      - master
jobs:
  test:
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        include:
          - php: '7.4'
            moodle-branch: 'MOODLE_401_STABLE'
            database: 'pgsql'
            db-version: '12'
          - php: '7.4'
            moodle-branch: 'MOODLE_401_STABLE'
            database: 'mysqli'
            db-version: '5.7'
          - php: '8.1'
            moodle-branch: 'MOODLE_404_STABLE'
            database: 'pgsql'
            db-version: '13'
          - php: '8.1'
            moodle-branch: 'MOODLE_404_STABLE'
            database: 'mysqli'
            db-version: '8.0'
          - php: '8.1'
            moodle-branch: 'MOODLE_405_STABLE'
            database: 'pgsql'
            db-version: '13'
          - php: '8.1'
            moodle-branch: 'MOODLE_405_STABLE'
            database: 'mysqli'
            db-version: '8.0'

    services:
      postgres:
        image: ${{ matrix.database == 'pgsql' && format('postgres:{0}', matrix.db-version) || '' }}
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 5432:5432

      mysqli:
        image: ${{ matrix.database == 'mysqli' && format('mysql:{0}', matrix.db-version) || '' }}
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        volumes:
          - ./.github/workflows/mysql.cnf:/etc/mysql/conf.d/my.cnf
        env:
          MYSQL_ROOT_PASSWORD: 'alfred'
#          MYSQL_DATABASE: 'xxx'
#          MYSQL_USER: 'admin'
#          MYSQL_PASSWORD: 'adminpw'
#          MYSQL_ROOT_HOST: '%'
        ports:
          - 3306:3306

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: plugin

      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: '14.15.0'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: max_input_vars=10000
          extensions: mbstring, pgsql, mysqli

      - name: Deploy moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3
          # Add dirs to $PATH
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          # PHPUnit depends on en_AU.UTF-8 locale
          sudo locale-gen en_AU.UTF-8
#      - name: Überprüfe docker logs
#        run: docker ps -q | xargs -I {} docker logs {}
#      - name: Teste MySQL-Verbindung
#        if: ${{ matrix.database == 'mysqli' }}
#        run: |
#          mysql -h 127.0.0.1 -u root -palfred -e "SHOW DATABASES;"
      - name: Install Moodle PGSQL
        if: ${{ matrix.database == 'pgsql' }}
        run: |
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}
      - name: Install Moodle MYSQL
        if: ${{ matrix.database == 'mysqli' }}
        run: |
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1 --db-pass=alfred
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: phplint
        if: ${{ always() }}
        run: moodle-plugin-ci phplint

      - name: phpcpd
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd || true

      - name: phpmd
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd

      - name: codechecker
        if: ${{ always() }}
        run: moodle-plugin-ci codechecker

      - name: validate
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: savepoints
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints

      - name: mustache
        if: ${{ always() }}
        run: moodle-plugin-ci mustache

      - name: grunt
        if: ${{ always() }}
        run: moodle-plugin-ci grunt

      - name: phpunit
        if: ${{ always() }}
        run: moodle-plugin-ci phpunit
      
      - name: PHPdoc
        if: ${{ always() }}
        run: moodle-plugin-ci phpdoc

      - name: behat
        if: ${{ always() }}
        run: moodle-plugin-ci behat --profile chrome

#      - name: filter_embedquestion phpunit with report
#        if: ${{ always() }}
#        run: moodle-plugin-ci phpunit -- /home/runner/work/moodle-report_embedquestion/moodle-report_embedquestion/moodle/filter/embedquestion

#      - name: filter_embedquestion behat with report
#        if: ${{ always() }}
#        run: moodle-plugin-ci behat --profile chrome -- /home/runner/work/moodle-report_embedquestion/moodle-report_embedquestion/moodle/filter/embedquestion
